import * as React from "react";
import axios from "axios";
import Avatar from "@mui/material/Avatar";
import Button from "@mui/material/Button";
import CssBaseline from "@mui/material/CssBaseline";
import TextField from "@mui/material/TextField";
import Link from "@mui/material/Link";
import Grid from "@mui/material/Grid";
import Box from "@mui/material/Box";
import AccountCircleIcon from "@mui/icons-material/AccountCircle";
import Typography from "@mui/material/Typography";
import Container from "@mui/material/Container";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import ErpCommon from "./constants";
import Snackbar from "@mui/material/Snackbar";
import MuiAlert from "@mui/material/Alert";
import SimpleBackdrop from "./loading";

const theme = createTheme({
  palette: {
    mode: "light",
    primary: {
      light: "#757ce8",
      main: "#3f50b5",
      dark: "#002884",
      contrastText: "#fff",
    },
    secondary: {
      light: "#ff7961",
      main: "#f44336",
      dark: "#ba000d",
      contrastText: "#000",
    },
  },
  typography: {
    fontFamily: [
      '"Segoe UI"',
      "Roboto",
      '"Helvetica Neue"',
      "Arial",
      "sans-serif",
      '"Apple Color Emoji"',
    ].join(","),
    fontSize: 15,
  },
});

export default function SignIn(props) {
  const Alert = React.forwardRef(function Alert(props, ref) {
    return <MuiAlert elevation={6} ref={ref} variant="filled" {...props} />;
  });

  const [openLoginFail, setOpenLoginFail] = React.useState(false);
  const [loading, setLoading] = React.useState(false);
  const [errorMsg, setErrorMsg] = React.useState("");

  const handleClose = (event, reason) => {
    if (reason === "clickaway") {
      return;
    }
    setOpenLoginFail(false);
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);

    if (data.get("email") === "" || data.get("password") === "") {
      setErrorMsg("Please fill both unsername and password");
      setOpenLoginFail(true);
      return;
    }

    setLoading(true);

    var sha256 = require("js-sha256").sha256;
    var hash = sha256.create();
    hash.update(data.get("password"));
    var hashStr = hash.hex();

    const payload = {
      userID: data.get("email"),
      userHash: hashStr,
    };

    console.log(payload);

    axios
      .post("https://localhost:8090/v1/login", payload)
      .then((response) => {
        setLoading(false);
        props.enableDash(data.get("email"), data.get("password"));
      })
      .catch((error) => {
        setLoading(false);
        setErrorMsg("Login Failed, Please check unsername and password");
        setOpenLoginFail(true);
      });
  };

  console.log(ErpCommon.url);

  return (
    <ThemeProvider theme={theme}>
      {loading && <SimpleBackdrop />}
      <Snackbar
        open={openLoginFail}
        autoHideDuration={6000}
        onClose={handleClose}
        anchorOrigin={{ vertical: "top", horizontal: "right" }}
      >
        <Alert onClose={handleClose} severity="warning">
          {errorMsg}
        </Alert>
      </Snackbar>
      <Container
        component="main"
        maxWidth="xs"
        // sx={{
        //   backgroundColor: "primary.dark",
        //   "&:hover": {
        //     backgroundColor: "primary.main",
        //     opacity: [0.9, 0.8, 0.7],
        //   },
        // }}
      >
        <CssBaseline />
        <Box
          sx={{
            border: 3,
            borderColor: "#4db6ac",
            borderRadius: 15,
            boxShadow: 15,
            bgcolor: "#ededed",
            marginTop: 15,
            padding: 9,
            display: "flex",
            flexDirection: "column",
            alignItems: "center",
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: "#4db6ac" }}>
            <AccountCircleIcon />
          </Avatar>
          <Typography component="h1" variant="h5" sx={{ color: "#4db6ac" }}>
            Sign in
          </Typography>
          <Box
            component="form"
            onSubmit={handleSubmit}
            noValidate
            sx={{ mt: 1 }}
          >
            <TextField
              margin="normal"
              required
              fullWidth
              id="email"
              label="Email Address"
              name="email"
              autoComplete="email"
              autoFocus
            />
            <TextField
              margin="normal"
              required
              fullWidth
              name="password"
              label="Password"
              type="password"
              id="password"
              autoComplete="current-password"
            />
            <Button
              type="submit"
              fullWidth
              variant="contained"
              sx={{
                mt: 3,
                mb: 2,
                height: 60,
                bgcolor: "#4db6ac",
                "&:hover": { backgroundColor: "#26a69a" },
              }}
            >
              Sign In
            </Button>
            <Grid container>
              <Grid item xs>
                <Link href="#" variant="body2">
                  Forgot password?
                </Link>
              </Grid>
            </Grid>
          </Box>
        </Box>
      </Container>
    </ThemeProvider>
  );
}
